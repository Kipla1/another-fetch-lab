{"ast":null,"code":"var _jsxFileName = \"/home/oscar/moringa-school-work/phase-2/labs/react-hooks-fetch-crud-lab/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AdminNavBar from \"./AdminNavBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport QuestionList from \"./QuestionList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [page, setPage] = useState(\"List\");\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/questions\").then(res => res.json()).then(data => setQuestions(data)).catch(error => console.error(\"Error fetching questions:\", error));\n  }, []);\n  function addQuestion(newQuestion) {\n    fetch(\"http://localhost:4000/questions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newQuestion)\n    }).then(res => res.json()).then(data => {\n      setQuestions(questions => [...questions, data]);\n      setPage(\"List\");\n    }).catch(err => console.error(\"Error adding question:\", err));\n  }\n  function deleteQuestion(id) {\n    fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setQuestions(questions => questions.filter(q => q.id !== id));\n    }).catch(error => console.error(\"Error deleting question:\", error));\n  }\n  function updateQuestion(id, updatedFields) {\n    fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedFields)\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Network response was not ok\");\n      return res.json();\n    }).then(updatedQuestion => {\n      setQuestions(questions => questions.map(q => q.id === id ? updatedQuestion : q));\n    }).catch(error => console.error(\"Error updating question:\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNavBar, {\n      onChangePage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), page === \"Form\" ? /*#__PURE__*/_jsxDEV(QuestionForm, {\n      onAddQuestion: addQuestion,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(QuestionList, {\n      questions: questions,\n      onDelete: deleteQuestion,\n      onUpdate: updateQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k3uU538G1rytq0O00geH18P2Du0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AdminNavBar","QuestionForm","QuestionList","jsxDEV","_jsxDEV","App","_s","page","setPage","questions","setQuestions","fetch","then","res","json","data","catch","error","console","addQuestion","newQuestion","method","headers","body","JSON","stringify","err","deleteQuestion","id","filter","q","updateQuestion","updatedFields","ok","Error","updatedQuestion","map","children","onChangePage","fileName","_jsxFileName","lineNumber","columnNumber","onAddQuestion","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["/home/oscar/moringa-school-work/phase-2/labs/react-hooks-fetch-crud-lab/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AdminNavBar from \"./AdminNavBar\";\nimport QuestionForm from \"./QuestionForm\";\nimport QuestionList from \"./QuestionList\";\n\nfunction App() {\n  const [page, setPage] = useState(\"List\");\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/questions\")\n      .then((res) => res.json())\n      .then((data) => setQuestions(data))\n      .catch((error) => console.error(\"Error fetching questions:\", error));\n  }, []);\n\n  function addQuestion(newQuestion) {\n    fetch(\"http://localhost:4000/questions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newQuestion),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setQuestions((questions) => [...questions, data]);\n        setPage(\"List\");\n      })\n      .catch((err) => console.error(\"Error adding question:\", err));\n  }\n\n  function deleteQuestion(id) {\n    fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        setQuestions((questions) => questions.filter((q) => q.id !== id));\n      })\n      .catch((error) => console.error(\"Error deleting question:\", error));\n  }\n\n  function updateQuestion(id, updatedFields) {\n    fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedFields),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Network response was not ok\");\n        return res.json();\n      })\n      .then((updatedQuestion) => {\n        setQuestions((questions) =>\n          questions.map((q) => (q.id === id ? updatedQuestion : q))\n        );\n      })\n      .catch((error) => console.error(\"Error updating question:\", error));\n  }\n\n  return (\n    <main>\n      <AdminNavBar onChangePage={setPage} />\n      {page === \"Form\" ? (\n        <QuestionForm onAddQuestion={addQuestion} setPage={setPage} />\n      ) : (\n        <QuestionList\n          questions={questions}\n          onDelete={deleteQuestion}\n          onUpdate={updateQuestion}\n        />\n      )}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}